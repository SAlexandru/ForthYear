package com.zumba.claudiuapp.notification;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import android.content.Context;
import android.content.SharedPreferences;

public class OldNotifications {
	private static final String FILENAME = "OldNotificationsFile";
	
	private SharedPreferences file;
	private Map<Timestamp, List<NotifMessages>> oldNotif;
	
	private static class SingletonOldNotifications {
		public static final OldNotifications instance = new OldNotifications();
	}
	
	private OldNotifications () {
		
	}
	
	private synchronized OldNotifications setContenxt (Context context) {
		file = context.getSharedPreferences(FILENAME, Context.MODE_PRIVATE);
		
		/*
		 *	should create a way for lazy initialization 
		 */
		oldNotif = new HashMap<>();
		for (Entry<String, ?> line: file.getAll().entrySet()) {
			Timestamp t;
			try {
				t = Timestamp.valueOf(line.getKey());
				if (!oldNotif.containsKey(t)) {
					oldNotif.put(t, new ArrayList<NotifMessages>());
				}
				oldNotif.get(t).add(new NotifMessages((String)line.getValue()));
			}
			catch (IllegalArgumentException e) {
				//someone has corrupted the file
				//asume that no values are valid
				file.edit().clear();
				file.edit().commit();
				oldNotif.clear();
				break;
			}
		}
		
		return this;
	}
	
	public OldNotifications getInstance(Context context) {
		return SingletonOldNotifications.instance.setContenxt(context);
		
	}
	
	

}
