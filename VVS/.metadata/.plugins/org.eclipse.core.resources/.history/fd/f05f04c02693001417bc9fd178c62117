package com.vvs.webserver.HTTP;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.nio.file.Path;
import java.sql.Timestamp;
import java.util.Date;

import javax.activation.MimetypesFileTypeMap;

public class HttpGetResponse {
	private String httpCode_;
	private String contentType_;
	private String body_;
	
	public HttpGetResponse (HttpRequest request, Path base) {
		body_ = "";
		contentType_ = "text/html; charset=UTF-8\r\n";
		httpCode_ = "HTTP/1.1 200 OK\r\n";
		
		if (request.isInvalid()) {
			contentLength_ = "Content-Length: " + body_.length() + "\r\n";
			connection_ = "Connection: closed\r\n\r\n";
			return;
		}
		
		File f;
		if (request.getPath().isEmpty()) {
			f = base.toAbsolutePath().resolve("index.html").toFile();
		}
		else {
			f = base.toAbsolutePath().resolve(request.getPath()).toFile();
		}
		
		if (!"GET".equals(request.getHttpMethod())) {

			contentLength_ = "Content-Length: " + body_.length() + "\r\n";
			connection_ = "Connection: closed\r\n\r\n";
		}
		else if (!f.exists()) {
		}
		else {
			httpCode_ = "HTTP/1.1 200 OK\r\n";
			String encoding = "UTF-8";
			try (InputStreamReader input = new InputStreamReader(new FileInputStream(f));) {
				encoding = input.getEncoding();	
				for (int ch = input.read(); -1 != ch; ch = input.read()) {
					body_ = String.format("%s%c", body_, ch);
				}
			} catch (Exception e) {
			}
			
			contentType_ =  "Content-Type: " + new MimetypesFileTypeMap().getContentType(f) + "; " + encoding + "\r\n";
			contentLength_ = "Content-Length: " + body_.length() + "\r\n";
		}
	}
	
	public void send(OutputStream out) throws IOException {
		HttpUtility.send(out, contentType_, httpCode_, body_);
	}
}
