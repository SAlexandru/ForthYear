package com.vvs.webserver.HTTP;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.nio.file.Path;
import java.sql.Timestamp;
import java.util.Date;

import javax.activation.MimetypesFileTypeMap;

public class HttpGetResponse {
	private Path p_;
	private String body_;
	private String httpCode_;
	private String contentType_;
	private HttpRequest request_;
	
	public HttpGetResponse (HttpRequest request, Path base) {
		p_ = base;
		body_ = "";
		contentType_ = "text/html; charset=UTF-8\r\n";
		httpCode_ = "HTTP/1.1 200 OK\r\n";
		request_ = request;
	}
	
	private void getFile(File f) {
		httpCode_ = "HTTP/1.1 200 OK\r\n";
		String encoding = "UTF-8";
		try (InputStreamReader input = new InputStreamReader(new FileInputStream(f));) {
			encoding = input.getEncoding();	
			for (int ch = input.read(); -1 != ch; ch = input.read()) {
				body_ = String.format("%s%c", body_, ch);
			}
		} catch (Exception e) {
		}
		contentType_ =  "Content-Type: " + new MimetypesFileTypeMap().getContentType(f) + "; " + encoding + "\r\n";
	}
	
	public void send(OutputStream out) throws IOException {
		if (request_.isInvalid()) {
			HttpUtility.send400(out);
		}
		else if (!HttpUtility.isGetMethod(request_.getHttpMethod())) {
			HttpUtility.send501(out);
		}
		else {
			File f;
			if (request_.getPath().isEmpty()) {
				f = p_.toAbsolutePath().resolve("index.html").toFile();
			}
			else {
				f = p_.toAbsolutePath().resolve(request_.getPath()).toFile();
			}
			if (f.exists()) {
				getFile(f);
				HttpUtility.send(out, httpCode_, contentType_, body_);
			}
		}
		
		HttpUtility.send(out, contentType_, httpCode_, body_);
	}
}
